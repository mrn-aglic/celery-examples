version: "3.8"

services:
  redis:
    image: 'redis:alpine'
    container_name: celery-examples-redis
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 10s
    volumes:
      - ./redis_data:/data
    ports:
      - '6379:6379'

  worker:
    image: celery-examples
    volumes:
      - .:/app
    depends_on:
      - redis
    env_file:
      - .env
    entrypoint: [ './entrypoint.sh', 'worker', 'default' ]

  worker-default:
    image: celery-examples
    volumes:
      - .:/app
    depends_on:
      - redis
    env_file:
      - .env
    entrypoint: ['./entrypoint.sh', 'worker', 'default']

  worker-other-queue:
    image: celery-examples
    volumes:
      - .:/app
    depends_on:
      - redis
    env_file:
      - .env
    entrypoint: [ './entrypoint.sh', 'worker', 'other_queue']


  scheduler:
    build: .
    image: celery-examples
    container_name: celery-examples-scheduler
    volumes:
      - .:/app
    depends_on:
      - redis
    environment:
      - instance=scheduler
    env_file:
      - .env
    entrypoint: ['./entrypoint.sh', 'scheduler']

  flower:
    build:
      context: ./
      dockerfile: flower/Dockerfile
    command: ['./entrypoint.sh', 'flower']
    volumes:
      - ./flower_data:/db
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
      worker:
        condition: service_started
    env_file:
      - .env
    ports:
      - '5555:5555'
